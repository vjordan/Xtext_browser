/*
 * generated by Xtext 2.15.0
 */
package org.xtext.browser.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.browser.mydsl.myDsl.Test
import org.xtext.browser.mydsl.myDsl.INSTRUCTION
import javax.inject.Inject
import org.eclipse.xtext.naming.IQualifiedNameProvider
import org.xtext.browser.mydsl.myDsl.GoTo
import org.xtext.browser.mydsl.myDsl.Open
import org.xtext.browser.mydsl.myDsl.Contains
import org.xtext.browser.mydsl.myDsl.Click
import org.xtext.browser.mydsl.myDsl.Insert
import java.util.ArrayList
import org.xtext.browser.mydsl.myDsl.Equal
import org.xtext.browser.mydsl.myDsl.Uncheck
import org.xtext.browser.mydsl.myDsl.Check
import org.xtext.browser.mydsl.myDsl.TYPE_CHECK_UNCHECK
import org.xtext.browser.mydsl.myDsl.Choose
import org.xtext.browser.mydsl.myDsl.Variable
import org.xtext.browser.mydsl.myDsl.TYPE_INSTRUCTION
import org.xtext.browser.mydsl.myDsl.Read
import org.xtext.browser.mydsl.myDsl.Count

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
	@Inject extension IQualifiedNameProvider
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(t: resource.allContents.toIterable.filter(Test)){
			fsa.generateFile("Main"+t.number+".java",t.compile);
		}
	}
	
	def compile(Test t) '''
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.chrome.ChromeDriver;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.By;
	import java.util.ArrayList;
	import org.openqa.selenium.JavascriptExecutor;
	import org.openqa.selenium.support.ui.Select;
	
	
	
	public class Main«t.number» {
	
		public static void main(String[] args){
			System.out.println("Test«t.number»");
			«FOR i : t.body»
				«compile(i,t.body.indexOf(i))»
			«ENDFOR»
	
	  }
	}
	'''
	
	def compile(INSTRUCTION i,int index) '''
		«IF i.class.simpleName == "OpenImpl"»
			«compile(i as Open,index)»
		«ENDIF»
		«IF i.class.simpleName == "GoToImpl"»
			«compile(i as GoTo,index)»
		«ENDIF»
		«IF i.class.simpleName == "ContainsImpl"»
			«compile(i as Contains,index)»
		«ENDIF»
		«IF i.class.simpleName == "ClickImpl"»
			«compile(i as Click,index)»
		«ENDIF»
		«IF i.class.simpleName == "InsertImpl"»
			«compile(i as Insert,index)»
		«ENDIF»
		«IF i.class.simpleName == "EqualImpl"»
			«compile(i as Equal,index)»
		«ENDIF»
		«IF i.class.simpleName == "UncheckImpl"»
			«compile(i as Uncheck,index)»
		«ENDIF»
		«IF i.class.simpleName == "CheckImpl"»
			«compile(i as Check,index)»
		«ENDIF»
		«IF i.class.simpleName == "ChooseImpl"»
			«compile(i as Choose,index)»
		«ENDIF»
		«IF i.class.simpleName == "VariableImpl"»
			«compile(i as Variable,index)»
		«ENDIF»
		«IF i.class.simpleName == "ForImpl"»
			«compile(i as For,index)»
		«ENDIF»
	'''
	
	def compile(Open o,int index) '''
		System.out.println("Open");
		System.setProperty("webdriver.chrome.driver", "D:/Documents/EMN/FILA3/Dedies/12-11/chromedriver.exe");
		WebDriver driver = new ChromeDriver();
		JavascriptExecutor jse = ((JavascriptExecutor)driver);
	'''
	
	def compile(GoTo i,int index) '''
		System.out.println("GoTo");
		driver.get("«i.url»");
	'''

	def compile(Contains c,int index) '''
		System.out.println("Contains");
		«IF (c.type == "Link")»
			//«c.type»
			ArrayList<WebElement> linkContains«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//a[contains(@title,'" + "«c.parametre.value»" + "')]"));
			boolean containsLink«index» = (linkContains«index».size() >= 1);
			System.out.println(containsLink«index»);
		«ENDIF»
		«IF (c.type == "Text")»
			//«c.type»
			ArrayList<WebElement> textContains«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//*[contains(text(),'«c.parametre.value»')]"));
			boolean containsText«index» = (textContains«index».size() >= 1);
			System.out.println(containsText«index»);
		«ENDIF»
	'''
	
	def compile(Click c,int index) '''
		System.out.println("Click");
		«IF (c.type == "Link")»
			//«c.type»
			ArrayList<WebElement> linkClick«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//a[contains(@title,'" + "«c.parametre.value»" + "')]"));
			if((linkClick«index».size() >= 1)){
				jse.executeScript("window.scrollTo(" + linkClick«index».get(0).getLocation().x + ", " + (linkClick«index».get(0).getLocation().y - linkClick«index».get(0).getRect().height * 3) + ")");
				linkClick«index».get(0).click();
			}
		«ENDIF»
		«IF (c.type == "Image")»
			//«c.type»
			ArrayList<WebElement> imageClick«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//img[contains(@alt,'" + "«c.parametre.value»" + "')]"));
			if((imageClick«index».size() >= 1)){
				jse.executeScript("window.scrollTo(" + imageClick«index».get(0).getLocation().x + ", " + (imageClick«index».get(0).getLocation().y - imageClick«index».get(0).getRect().height * 3) + ")");
				imageClick«index».get(0).click();
			}
		«ENDIF»
		«IF (c.type == "Button")»
			//«c.type»
			ArrayList<WebElement> buttonClick«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//input[contains(@value,'" + "«c.parametre.value»" + "')]"));
			if((buttonClick«index».size() >= 1)){
				jse.executeScript("window.scrollTo(" + buttonClick«index».get(0).getLocation().x + ", " + (buttonClick«index».get(0).getLocation().y - buttonClick«index».get(0).getRect().height * 3) + ")");
				buttonClick«index».get(0).click();
			}
		«ENDIF»

	'''
	
	def compile(Insert i,int index) '''
		System.out.println("Insert");
		ArrayList<WebElement> searchInsert«index» = (ArrayList<WebElement>)  driver.findElements(By.xpath("//input[contains(@name,'" + "«i.name»" + "')]"));
		if((searchInsert«index».size() >= 1)){
			jse.executeScript("window.scrollTo(" + searchInsert«index».get(0).getLocation().x + ", " + (searchInsert«index».get(0).getLocation().y - searchInsert«index».get(0).getRect().height * 3) + ")");
			«IF i.parametre.class.simpleName == "VarImpl"»
				searchInsert«index».get(0).sendKeys(«i.parametre.value»);
			«ENDIF»
			«IF i.parametre.class.simpleName == "ValueImpl"»
				searchInsert«index».get(0).sendKeys("«i.parametre.value»");
			«ENDIF»
		}
		
	'''
	
	def compile(Equal e,int index) '''
		System.out.println("Equal");
		System.out.println(«e.var1» == «e.var2»);
	'''
	
	def compile(Uncheck u,int index) '''
		System.out.println("Uncheck");
		«IF (u.type == "all")»
			System.out.println("Uncheck all");
			ArrayList<WebElement> checkboxs«index» = (ArrayList<WebElement>) driver.findElements(By.cssSelector("input:checked[type='checkbox']"));
			for(WebElement element : checkboxs«index»){
				element.click();
			}
		«ENDIF»
	'''
	
	def compile(Check c,int index) '''
		System.out.println("Check");
		«IF (c.type == "all")»
			System.out.println("Check all");
			ArrayList<WebElement> checkboxs«index» = (ArrayList<WebElement>) driver.findElements(By.cssSelector("input:not(:checked)[type='checkbox']"));
			for(WebElement element : checkboxs«index»){
				element.click();
			}
		«ENDIF»
		«IF (c.type.class.simpleName == "TYPE_CHECK_UNCHECKImpl")»
			System.out.println("Check tab");
			«FOR box : c.type.tableau»
				ArrayList<WebElement> label«index»«c.type.tableau.indexOf(box)» = (ArrayList<WebElement>) driver.findElements(By.xpath("//label[contains(text(),'«box»')]"));
				jse.executeScript("window.scrollTo(" + label«index»«c.type.tableau.indexOf(box)».get(0).getLocation().x + ", " + (label«index»«c.type.tableau.indexOf(box)».get(0).getLocation().y - label«index»«c.type.tableau.indexOf(box)».get(0).getRect().height * 3) + ")");
				ArrayList<WebElement> checkbox«index»«c.type.tableau.indexOf(box)» = (ArrayList<WebElement>) driver.findElements(By.xpath("//input[contains(@id,'" + label«index»«c.type.tableau.indexOf(box)».get(0).getAttribute("id") + "')]"));
				checkbox«index»«c.type.tableau.indexOf(box)».get(0).click();
			«ENDFOR»
		«ENDIF»
	'''
	def compile(Choose c,int index) '''
		System.out.println("Choose");
		Select choose«index» = new Select(driver.findElement(By.xpath("//select[contains(@name,'" + "«c.name»" + "')]")));
		choose«index».selectByVisibleText("«c.parametre»");
		
	'''
	
	def compile(Variable v,int index) '''
		System.out.println("Variable");
		«IF (v.instruction.class.simpleName == "ReadImpl")»
			System.out.println("Read");
			String «v.name» = «compile(v.instruction as Read,index)»
			System.out.println(«v.name»);
		«ENDIF»
		«IF (v.instruction.class.simpleName == "CountImpl")»
			System.out.println("Count");
			int «v.name» = «compile(v.instruction as Count,index)»
			System.out.println(«v.name»);
		«ENDIF»
		
	'''
	
	def compile(Read r,int index) '''
		«IF r.type == "Title"»
			driver.findElement(By.xpath("//*[contains(@class,'" + "«r.parametre»" + "')]")).getAttribute("title");
		«ENDIF»
		«IF r.type == "Link"»
			driver.findElement(By.xpath("//*[contains(@class,'" + "«r.parametre»" + "')]")).getAttribute("href");
		«ENDIF»
	'''
	
	def compile(Count c,int index) '''
		((ArrayList<WebElement>)  driver.findElements(By.xpath("//*[contains(@class,'" + "«c.parametre»" + "')]"))).size();
	'''
}